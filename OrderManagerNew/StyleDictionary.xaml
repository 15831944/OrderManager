<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
  xmlns:local="clr-namespace:OrderManagerNew" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ImageSource/SvgSource.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="Common_DarkBackGround" Color="#FF30312C" />
    <SolidColorBrush x:Key="Common_OrangeTitleBar" Color="#FF056840" />
    <SolidColorBrush x:Key="Common_DarkBrown" Color="#FF4C4B4B" />
    <SolidColorBrush x:Key="background_SuperDarkCaseTable" Color="#FF353531" />
    <SolidColorBrush x:Key="background_WhiteCaseTable" Color="#FFEDEDE2" />
    <SolidColorBrush x:Key="background_SmallCase" Color="#FFA9BCB8" />
    <SolidColorBrush x:Key="background_FocusedCase" Color="#FFFFF1C2" />
    <SolidColorBrush x:Key="background_FocusedSmallCase" Color="#FFEDAE9F" />
    <SolidColorBrush x:Key="borderbrush_FocusedSmallCase" Color="#FFF26C5A" />
    <SolidColorBrush x:Key="borderbrush_SuperWhiteDetail" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="background_Expender_mouseOver" Color="#FF07894E" />
    <SolidColorBrush x:Key="comboboxButton_Color" Color="#FFF6AA00" />
    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <!--  TitleBar-Start  -->
    <Style x:Key="systemButton_max" TargetType="{x:Type ToggleButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Border BorderThickness="0">
                    <Image Source="{StaticResource Max_normal_06DrawingImage}" Stretch="Fill" />
                </Border>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip" Value="{local:LocExtension Maximize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ContentPresenter
                      x:Name="contentPresenter"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Content="{TemplateBinding Content}"
                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      Focusable="False" RecognizesAccessKey="True"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="ToggleButton.IsChecked" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Border BorderThickness="0">
                            <Image Source="{StaticResource Restore_normal_10DrawingImage}" Stretch="fill" />
                        </Border>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip" Value="{local:LocExtension Restore_titlebar}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Content">
                    <Setter.Value>
                        <Border BorderThickness="0">
                            <Image Source="{StaticResource Restore_focus_09DrawingImage}" Stretch="fill" />
                        </Border>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Content">
                    <Setter.Value>
                        <Border BorderThickness="0">
                            <Image Source="{StaticResource Max_focus_05DrawingImage}" Stretch="fill" />
                        </Border>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="systemButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="systemButton_contactInteware" BasedOn="{StaticResource systemButton}" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="{StaticResource Customer_service_normal_04DrawingImage}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip" Value="{local:LocExtension Contect}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="{StaticResource Customer_service_focus_03DrawingImage}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="systemButton_mimimize" BasedOn="{StaticResource systemButton}" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="{StaticResource Min_normal_08DrawingImage}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip" Value="{local:LocExtension Minimize}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="{StaticResource Min_focus_07DrawingImage}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="systemButton_close" BasedOn="{StaticResource systemButton}" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="{StaticResource Close_normalDrawingImage}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip" Value="{local:LocExtension Close_titlebar}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="{StaticResource Close_focusDrawingImage}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  TitleBar-End  -->

    <!--  FunctionTable-Start  -->
    <Style x:Key="updateImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{DynamicResource icon_auxiliary_updateDrawingImage}" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="Height" Value="68" />
    </Style>
    <Style x:Key="maskImage" TargetType="{x:Type Rectangle}">
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Fill" Value="White" />
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Visibility" Value="Hidden" />
    </Style>
    <Style x:Key="maskImageInstalling" TargetType="{x:Type Rectangle}">
        <Setter Property="Panel.ZIndex" Value="3" />
        <Setter Property="Fill" Value="{StaticResource Common_DarkBrown}" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Width" Value="54" />
        <Setter Property="Height" Value="54" />
        <Setter Property="Margin" Value="5" />
    </Style>
    <Style x:Key="progressbarInstalling" BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Panel.ZIndex" Value="4" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Visibility" Value="Visible" />
    </Style>
    <Style x:Key="progressArc" TargetType="{x:Type ed:Arc}">
        <Setter Property="Opacity" Value="0.9" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Fill" Value="White" />
        <Setter Property="ArcThicknessUnit" Value="Pixel" />
        <Setter Property="ArcThickness" Value="10000" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="StartAngle" Value="0" />
        <Setter Property="EndAngle" Value="360" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Height" Value="52" />
        <Setter Property="Width" Value="52" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="progressImage" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="64" />
        <Setter Property="Width" Value="64" />
    </Style>
    <Style x:Key="popupBoxSoftwareTable" TargetType="{x:Type materialDesign:PopupBox}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="PlacementMode" Value="BottomAndAlignCentres" />
    </Style>
    <Style x:Key="FunctionButton_Skin" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="6,0" />
        <Setter Property="Height" Value="55" />
        <Setter Property="Width" Value="55" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style x:Key="FunctionButton_refresh" BasedOn="{StaticResource FunctionButton_Skin}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_refreshDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_refresh_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_refresh_clickDrawingImage}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FunctionButton_cloud" BasedOn="{StaticResource FunctionButton_Skin}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_cloud_downloadDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_cloud_download_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_cloud_download_clickDrawingImage}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FunctionButton_setting" BasedOn="{StaticResource FunctionButton_Skin}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_set_upDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_set_up_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_set_up_clickDrawingImage}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FunctionButton_User" BasedOn="{StaticResource FunctionButton_Skin}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_userDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_user_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_user_clickDrawingImage}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  FunctionTable-End  -->

    <!--  SortTable-Start  -->
    <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="172" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Background" Value="{DynamicResource Common_OrangeTitleBar}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="30,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas
                      Width="{TemplateBinding Width}"
                      Height="{TemplateBinding Height}"
                      Background="{TemplateBinding Background}"
                      SnapsToDevicePixels="True">
                        <Canvas
                          x:Name="canvNormal" Canvas.Right="0"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True" Visibility="Visible">
                            <Polygon Fill="#FF0bbd81" Points="0,0 0,26 26,26 26,0 0,0" />
                            <Line
                              Stroke="#FFFFFFFF" StrokeThickness="1" X1="8"
                              X2="18" Y1="13" Y2="13" />
                            <Line
                              Stroke="#FFFFFFFF" StrokeThickness="1" X1="13"
                              X2="13" Y1="8" Y2="18" />
                        </Canvas>
                        <Canvas
                          x:Name="canvChecked" Canvas.Right="0"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True" Visibility="Hidden">
                            <Polygon Fill="#FF0bbd81" Points="0,0 0,26 26,26 26,0 0,0" />
                            <Line
                              Stroke="#FFFFFFFF" StrokeThickness="1" X1="8"
                              X2="18" Y1="13" Y2="13" />
                        </Canvas>
                        <ContentPresenter
                          Margin="{TemplateBinding Padding}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource background_Expender_mouseOver}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="canvChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="canvNormal" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="#FFF4E9DC" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                      Width="{TemplateBinding Width}"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="0" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <ToggleButton
                              Grid.Row="0" x:Name="HeaderSite"
                              Content="{TemplateBinding Header}"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{DynamicResource ExpanderToggleButtonStyle}" />
                            <ContentPresenter
                              Grid.Row="1" x:Name="ExpandSite"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Focusable="False" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SortTextBox" BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
        <Setter Property="Width" Value="112" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="#FF657a69" />
        <Setter Property="BorderBrush" Value="#FFF4E9DC" />
        <Setter Property="Foreground" Value="#FFF4E9DC" />
        <Setter Property="Margin" Value="0,5,5,5" />
        <Setter Property="Padding" Value="1,-1,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="SortRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Click">
                            <!--  Value是水波紋大小  -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="30" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="30" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-15" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-15" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator
                      Margin="0,1" HorizontalAlignment="Left" Background="#FF657a69"
                      Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Width="11" Height="11">
                                <!--  Define size of the Bullet  -->
                                <!--  The two borders  -->
                                <Border
                                  Name="RadioOuter" Background="Transparent" BorderBrush="#FFF4E9DC"
                                  BorderThickness="1" CornerRadius="20" />
                                <Border
                                  Name="RadioMark" Margin="3"
                                  Background="{DynamicResource comboboxButton_Color}"
                                  CornerRadius="20" Visibility="Hidden" />
                                <Canvas
                                  Width="20" Height="20" HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                    <Ellipse
                                      x:Name="InteractionEllipse" Canvas.Left="10" Canvas.Top="10"
                                      Width="0" Height="0"
                                      Fill="{TemplateBinding Foreground}"
                                      Opacity="0" RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Canvas>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--  Text element  -->
                        <TextBlock
                          Name="RadioContent" Margin="10,0,0,0" FontFamily="Segoe UI"
                          FontSize="14" Foreground="#FFF4E9DC">
                            <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <!--  If item is checked, trigger the visibility of the mark  -->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource Click}" />
                        </EventTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--  If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting  -->
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="RadioOuter" Property="Opacity" Value="0.2" />
                            <Setter TargetName="RadioContent" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Sort_Checkbox" BasedOn="{StaticResource MaterialDesignCheckBox}" TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource comboboxButton_Color}" />
        <Setter Property="BorderBrush" Value="{DynamicResource comboboxButton_Color}" />
    </Style>
    <!--  SortTable-End  -->

    <!--  CaseTable-Start  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle
                          Width="Auto" Height="Auto" HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch" Fill="Transparent" />
                        <Border
                          x:Name="Rectangle1" Width="10" Height="Auto"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          Background="{TemplateBinding Background}"
                          CornerRadius="6" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#FF657a69" />
        <Setter Property="Background" Value="#FFB3B3B3" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Border
                          x:Name="Rectangle1" Width="8" Height="Auto"
                          Margin="0,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          Background="{TemplateBinding Background}"
                          CornerRadius="5" />

                        <Track
                          Grid.Row="0" x:Name="PART_Track" Focusable="false"
                          IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                  x:Name="PageUp" Command="ScrollBar.PageDownCommand" Focusable="false"
                                  Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                  x:Name="PageDown" Command="ScrollBar.PageUpCommand" Focusable="false"
                                  Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CaseTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="{StaticResource background_WhiteCaseTable}" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource Common_DarkBrown}" />
    </Style>
    <!--<Style x:Key="CaseTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Height" Value="36" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        Grid.Column="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="#FF353531"
                                        BorderThickness="1,1,0,1"
                                        CornerRadius="5,0,0,0" />
                                    <Rectangle
                                        Grid.Column="1"
                                        Margin="0,0,5,0"
                                        Fill="{TemplateBinding Background}" />
                                    <Rectangle
                                        Grid.Column="0"
                                        Grid.ColumnSpan="3"
                                        Height="1"
                                        VerticalAlignment="Top"
                                        Fill="#FF353531" />
                                    <Rectangle
                                        Grid.Column="0"
                                        Grid.ColumnSpan="3"
                                        Height="1"
                                        VerticalAlignment="Bottom"
                                        Panel.ZIndex="2"
                                        Fill="#FF353531" />
                                    <ContentPresenter
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header" />
                                    <Border
                                        Grid.Column="2"
                                        Width="10"
                                        Height="{TemplateBinding Height}"
                                        Margin="-8,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0,1,0,1"
                                        CornerRadius="0,5,0,0" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Trigger.Setters>
                                            <Setter Property="Background" Value="Beige" />
                                            <Setter Property="Panel.ZIndex" Value="1" />
                                        </Trigger.Setters>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Trigger.Setters>
                                            <Setter Property="Background" Value="LightGray" />
                                        </Trigger.Setters>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style x:Key="OrderBase_normallabel" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="OrderBase_OrderIDlabel" BasedOn="{StaticResource OrderBase_normallabel}" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style x:Key="OrderSmallCase_OrderIDlabel" BasedOn="{StaticResource OrderBase_normallabel}" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="btn_WebOpen" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_webDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_web_clickDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_web_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BtnBG_refresh" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn_Download" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="6,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_downloadDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_download_clickDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_download_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BtnBG_refresh" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn_folderOpen_forCase" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="28" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="6,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_folderDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_folder_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_folder_clickDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BtnBG_refresh" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn_GuideDirOpen" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_guideDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_guide_clickDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_guide_mouseDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BtnBG_refresh" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  CaseTable-End  -->

    <!--  DetailTable-Start  -->
    <Style x:Key="label_detail" TargetType="Label">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Common_DarkBrown}" />
    </Style>
    <Style x:Key="textbox_detail" BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource Common_DarkBrown}" />
        <Setter Property="BorderBrush" Value="{DynamicResource borderbrush_SuperWhiteDetail}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="0,3,3,3" />
        <Setter Property="Padding" Value="1,0,0,0" />
    </Style>
    <Style x:Key="textbox_detail_MultiLine" BasedOn="{StaticResource textbox_detail}" TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style x:Key="textbox_detail_MultiLine_leftAlign" BasedOn="{x:Null}" TargetType="TextBox">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Foreground" Value="{StaticResource Common_DarkBrown}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <!--  DetailTable-End  -->

    <!--  Setting-Start  -->
    <Style x:Key="Setting_sysBtn" BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="36" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>
    <Style x:Key="Setting_textbox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="24" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0,-3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                      x:Name="border"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      SnapsToDevicePixels="True">
                        <ScrollViewer
                          x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="comboboxSetting" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="#F3E8DB" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="26" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                          Grid.Column="1" x:Name="Border" Background="#353531"
                                          BorderThickness="0" />
                                        <Border Grid.Column="0" Background="{DynamicResource background_Expender_mouseOver}" BorderThickness="0" />
                                        <Path
                                          Grid.Column="1" x:Name="Arrow" Width="10"
                                          Height="10" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Fill="White" Stretch="Uniform" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Arrow" Property="Data" Value="F1M753.644,-13.0589L753.736,-12.9639 753.557,-12.7816 732.137,8.63641 732.137,29.7119 756.445,5.40851 764.094,-2.24384 764.275,-2.42352 771.834,5.1286 796.137,29.4372 796.137,8.36163 774.722,-13.0589 764.181,-23.5967 753.644,-13.0589z" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter
                          Name="ContentSite" Margin="3,0,26,0" VerticalAlignment="Center"
                          Content="{TemplateBinding SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                          IsHitTestVisible="False" />
                        <TextBox x:Name="PART_EditableTextBox" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" />
                        <Popup
                          Name="Popup" AllowsTransparency="True" Focusable="False"
                          IsOpen="{TemplateBinding IsDropDownOpen}"
                          Placement="Bottom" PopupAnimation="Slide">
                            <Grid
                              Name="DropDown"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                              SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource background_Expender_mouseOver}" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Background="{DynamicResource background_Expender_mouseOver}">
                        <ContentPresenter Margin="3" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Common_OrangeTitleBar}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn_folderOpen" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Name="BtnBG_refresh" Source="{StaticResource icon_folderDrawingImage}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_folder_clickDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnBG_refresh" Property="Source" Value="{StaticResource icon_folder_mouseDrawingImage}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Setting-End  -->

</ResourceDictionary>